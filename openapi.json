{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://api.nevua.markets",
      "description": "Production"
    }
  ],
  "info": {
    "title": "Nevua Markets API",
    "version": "0.0.1",
    "license": {
      "name": "ISC",
      "url": "https://opensource.org/licenses/ISC"
    }
  },
  "components": {
    "schemas": {
      "SearchV2JSONRequest": {
        "type": "object",
        "properties": {
          "keyphrases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchKeyphrase"
            }
          },
          "searchMatchOperator": {
            "$ref": "#/components/schemas/SearchMatchOperator"
          },
          "partial": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "required": [
          "keyphrases",
          "partial",
          "searchMatchOperator"
        ]
      },
      "SearchKeyphrase": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "include": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "required": [
          "text"
        ]
      },
      "SearchMatchOperator": {
        "type": "string",
        "enum": [
          "AND",
          "OR"
        ]
      },
      "SearchJSONResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MatchingEvent"
        }
      },
      "MatchingEvent": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The event ID",
            "type": "string"
          },
          "title": {
            "description": "The event title",
            "type": "string"
          },
          "slug": {
            "description": "The event slug",
            "type": "string"
          },
          "image": {
            "description": "The event image",
            "type": "string"
          },
          "type": {
            "description": "The event type",
            "enum": [
              "event",
              "market"
            ],
            "type": "string"
          },
          "markets": {
            "description": "The markets associated with the event",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The market ID",
                  "type": "string"
                },
                "image": {
                  "description": "The market image",
                  "type": "string"
                },
                "question": {
                  "description": "The market question",
                  "type": "string"
                },
                "outcomes": {
                  "description": "Outcomes and outcome prices",
                  "type": "string"
                },
                "outcomePrices": {
                  "type": "string"
                },
                "nevuaSVGLink": {
                  "description": "SVG link",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "required": [
                "id",
                "image",
                "nevuaSVGLink",
                "outcomePrices",
                "outcomes",
                "question"
              ]
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "image",
          "markets",
          "slug",
          "title",
          "type"
        ]
      },
      "SearchTagsJSONRequest": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchTag"
            }
          },
          "searchMatchOperator": {
            "$ref": "#/components/schemas/SearchMatchOperator"
          }
        },
        "additionalProperties": false,
        "required": [
          "searchMatchOperator",
          "tags"
        ]
      },
      "SearchTag": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "include": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "required": [
          "text"
        ]
      },
      "GetWatchListJSONResponse": {
        "type": "object",
        "properties": {
          "watchLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WatchListWithId"
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "watchLists"
        ]
      },
      "WatchListWithId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "query": {
            "$ref": "#/components/schemas/WatchlistQuery"
          },
          "automaticallyAddMatchingEvents": {
            "type": "boolean"
          },
          "events": {
            "$ref": "#/components/schemas/EventsMapWithAutoFetch"
          },
          "hiddenEvents": {
            "$ref": "#/components/schemas/EventsMap"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "createdAt",
          "events",
          "id",
          "name"
        ]
      },
      "WatchlistQuery": {
        "$ref": "#/components/schemas/WatchlistQuery_1"
      },
      "WatchlistQuery_1": {
        "type": "object",
        "properties": {
          "keyphrases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchKeyphrase"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchTag"
            },
            "nullable": true
          },
          "searchMatchOperator": {
            "$ref": "#/components/schemas/SearchMatchOperator"
          },
          "createdAt": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "createdAt",
          "searchMatchOperator"
        ]
      },
      "__type": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "autoFetch": {
              "type": "boolean"
            },
            "markets": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "required": [
            "autoFetch",
            "markets"
          ]
        }
      },
      "EventsMapWithAutoFetch": {
        "$ref": "#/components/schemas/__type"
      },
      "EventsMap": {
        "$ref": "#/components/schemas/EventsMap_1"
      },
      "EventsMap_1": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "markets": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "required": [
            "markets"
          ]
        }
      },
      "CreateWatchListFromTagsJSONRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchTag"
            }
          },
          "searchMatchOperator": {
            "$ref": "#/components/schemas/SearchMatchOperator"
          },
          "automaticallyAddMatchingEvents": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "required": [
          "name",
          "searchMatchOperator",
          "tags"
        ]
      },
      "CreateWatchListFromTagsJSONResponse": {
        "type": "object",
        "properties": {
          "watchListId": {
            "type": "string"
          },
          "watchListName": {
            "type": "string"
          },
          "eventCount": {
            "type": "number"
          },
          "marketCount": {
            "type": "number"
          }
        },
        "additionalProperties": false,
        "required": [
          "eventCount",
          "marketCount",
          "watchListId",
          "watchListName"
        ]
      },
      "DeleteWatchListJSONRequest": {
        "type": "object",
        "properties": {
          "watchListId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "watchListId"
        ]
      },
      "DeleteWatchListJSONResponse": {
        "type": "object",
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      }
    }
  },
  "security": [],
  "paths": {
    "/search/v2": {
      "post": {
        "operationId": "searchEvents",
        "summary": "Search by Keyphrases",
        "description": "Search API for events using keyphrases.\n",
        "tags": [
          "Search API"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchV2JSONRequest"
              },
              "example": {
                "keyphrases": [
                  {
                    "text": "will trump",
                    "include": true
                  }
                ],
                "searchMatchOperator": "OR",
                "partial": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful search response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJSONResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/search/tag-slugs": {
      "post": {
        "operationId": "searchByTagSlugs",
        "summary": "Search by Tag Slugs",
        "description": "Search API for events using tag slugs.\n",
        "tags": [
          "Search API"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchTagsJSONRequest"
              },
              "example": {
                "tags": [
                  {
                    "text": "sports",
                    "include": true
                  },
                  {
                    "text": "esports",
                    "include": true
                  }
                ],
                "searchMatchOperator": "OR"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful search response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJSONResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/watchlist/{watchlistId}": {
      "get": {
        "operationId": "getWatchlist",
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Get user's watchlists",
        "description": "Retrieves all watchlists for the authenticated user, or a specific watchlist if ID is provided.\nReturns watchlists sorted by creation date (most recent first).\n",
        "tags": [
          "Watchlists"
        ],
        "parameters": [
          {
            "name": "watchlistId",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Optional watchlist ID. If not provided, returns all user's watchlists.",
            "example": "507f1f77bcf86cd799439011"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved watchlists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWatchListJSONResponse"
                },
                "examples": {
                  "all_watchlists": {
                    "summary": "All user watchlists",
                    "value": {
                      "watchLists": [
                        {
                          "id": "507f1f77bcf86cd799439011",
                          "name": "Election Markets",
                          "query": {
                            "keyphrases": [
                              {
                                "text": "election",
                                "include": true
                              }
                            ],
                            "tags": [],
                            "searchMatchOperator": "OR",
                            "createdAt": "2024-09-26T10:30:00.000Z"
                          },
                          "automaticallyAddMatchingEvents": true,
                          "events": {
                            "event123": {
                              "autoFetch": true,
                              "markets": [
                                "market456",
                                "market789"
                              ]
                            }
                          },
                          "createdAt": "2024-09-26T10:30:00.000Z",
                          "updatedAt": "2024-09-26T11:00:00.000Z"
                        }
                      ]
                    }
                  },
                  "specific_watchlist": {
                    "summary": "Specific watchlist",
                    "value": {
                      "watchLists": [
                        {
                          "id": "507f1f77bcf86cd799439011",
                          "name": "Sports Betting",
                          "query": {
                            "keyphrases": [],
                            "tags": [
                              {
                                "text": "sports",
                                "include": true
                              }
                            ],
                            "searchMatchOperator": "AND",
                            "createdAt": "2024-09-26T10:30:00.000Z"
                          },
                          "automaticallyAddMatchingEvents": true,
                          "events": {},
                          "createdAt": "2024-09-26T10:30:00.000Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/watchlist/v2/create": {
      "post": {
        "operationId": "createWatchlistFromTags",
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Create watchlist from tag search",
        "description": "Creates a new watchlist by searching for events using tag slugs and automatically \npopulating the watchlist with matching events and markets. This is a simplified \nway to create watchlists based on predefined tags.\n",
        "tags": [
          "Watchlists"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWatchListFromTagsJSONRequest"
              },
              "examples": {
                "sports_watchlist": {
                  "summary": "Sports watchlist with OR operator",
                  "value": {
                    "name": "Sports & Entertainment",
                    "tags": [
                      {
                        "text": "sports",
                        "include": true
                      },
                      {
                        "text": "entertainment",
                        "include": true
                      }
                    ],
                    "searchMatchOperator": "OR",
                    "automaticallyAddMatchingEvents": true
                  }
                },
                "crypto_watchlist": {
                  "summary": "Crypto watchlist with AND operator",
                  "value": {
                    "name": "Crypto Markets",
                    "tags": [
                      {
                        "text": "crypto",
                        "include": true
                      },
                      {
                        "text": "bitcoin",
                        "include": true
                      }
                    ],
                    "searchMatchOperator": "AND",
                    "automaticallyAddMatchingEvents": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Watchlist created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWatchListFromTagsJSONResponse"
                },
                "examples": {
                  "success": {
                    "summary": "Successful watchlist creation",
                    "value": {
                      "watchListId": "507f1f77bcf86cd799439011",
                      "watchListName": "Sports & Entertainment",
                      "eventCount": 25,
                      "marketCount": 67
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "invalid_name_length": {
                    "summary": "Invalid watchlist name length",
                    "value": {
                      "error": "Watchlist name must be between 1 and 100 characters"
                    }
                  },
                  "empty_name": {
                    "summary": "Empty watchlist name",
                    "value": {
                      "error": "Watchlist name must be between 1 and 100 characters"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "user_not_found": {
                    "summary": "User not found",
                    "value": {
                      "error": "User not found and/or invalid API key"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/watchlist/delete": {
      "post": {
        "operationId": "deleteWatchlist",
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Delete a watchlist",
        "description": "Permanently deletes a watchlist owned by the authenticated user. This action cannot be undone.\nOnly the owner of the watchlist can delete it.\n",
        "tags": [
          "Watchlists"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteWatchListJSONRequest"
              },
              "examples": {
                "delete_request": {
                  "summary": "Delete watchlist request",
                  "value": {
                    "watchListId": "507f1f77bcf86cd799439011"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Watchlist deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWatchListJSONResponse"
                },
                "examples": {
                  "success": {
                    "summary": "Successful deletion",
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "invalid_request": {
                    "summary": "Invalid request format",
                    "value": {
                      "error": "Invalid request body"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Watchlist not found or doesn't belong to user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "not_found": {
                    "summary": "Watchlist not found",
                    "value": {
                      "error": "Watchlist not found or already deleted"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}
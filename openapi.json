{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://api.nevua.markets",
      "description": "Production"
    }
  ],
  "info": {
    "title": "Nevua Markets API",
    "version": "0.0.1",
    "license": {
      "name": "ISC",
      "url": "https://opensource.org/licenses/ISC"
    }
  },
  "components": {
    "schemas": {
      "SearchV2JSONRequest": {
        "title": "SearchV2JSONRequest",
        "type": "object",
        "properties": {
          "keyphrases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchKeyphrase"
            },
            "title": "keyphrases"
          },
          "searchMatchOperator": {
            "$ref": "#/components/schemas/SearchMatchOperator",
            "title": "searchMatchOperator"
          },
          "partial": {
            "type": "boolean",
            "title": "partial"
          }
        },
        "additionalProperties": false,
        "required": [
          "keyphrases",
          "partial",
          "searchMatchOperator"
        ]
      },
      "SearchKeyphrase": {
        "title": "SearchKeyphrase",
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "title": "text"
          },
          "include": {
            "type": "boolean",
            "title": "include"
          },
          "type": {
            "enum": [
              "exclude",
              "include"
            ],
            "type": "string",
            "title": "type"
          }
        },
        "additionalProperties": false,
        "required": [
          "text"
        ]
      },
      "SearchMatchOperator": {
        "title": "SearchMatchOperator",
        "type": "string",
        "enum": [
          "AND",
          "OR"
        ]
      },
      "SearchJSONResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MatchingEvent"
        }
      },
      "MatchingEvent": {
        "title": "MatchingEvent",
        "type": "object",
        "properties": {
          "id": {
            "description": "The event ID",
            "type": "string",
            "title": "id"
          },
          "title": {
            "description": "The event title",
            "type": "string",
            "title": "title"
          },
          "slug": {
            "description": "The event slug",
            "type": "string",
            "title": "slug"
          },
          "image": {
            "description": "The event image",
            "type": "string",
            "title": "image"
          },
          "type": {
            "description": "The event type",
            "enum": [
              "event",
              "market"
            ],
            "type": "string",
            "title": "type"
          },
          "markets": {
            "description": "The markets associated with the event",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The market ID",
                  "type": "string",
                  "title": "id"
                },
                "image": {
                  "description": "The market image",
                  "type": "string",
                  "title": "image"
                },
                "question": {
                  "description": "The market question",
                  "type": "string",
                  "title": "question"
                },
                "outcomes": {
                  "description": "Outcomes and outcome prices",
                  "type": "string",
                  "title": "outcomes"
                },
                "outcomePrices": {
                  "type": "string",
                  "title": "outcomePrices"
                },
                "nevuaSVGLink": {
                  "description": "SVG link",
                  "type": "string",
                  "title": "nevuaSVGLink"
                }
              },
              "additionalProperties": false,
              "required": [
                "id",
                "image",
                "nevuaSVGLink",
                "outcomePrices",
                "outcomes",
                "question"
              ]
            },
            "title": "markets"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "image",
          "markets",
          "slug",
          "title",
          "type"
        ]
      },
      "CreateWatchlistScopeSubscriptionJSONRequest": {
        "title": "CreateWatchlistScopeSubscriptionJSONRequest",
        "type": "object",
        "properties": {
          "watchlistId": {
            "type": "string",
            "title": "watchlistId"
          },
          "subscriptionTypeConfig": {
            "$ref": "#/components/schemas/SubscriptionTypeConfig",
            "title": "subscriptionTypeConfig"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookNotificationChannel"
            },
            "title": "channels"
          }
        },
        "additionalProperties": false,
        "required": [
          "channels",
          "subscriptionTypeConfig",
          "watchlistId"
        ]
      },
      "SubscriptionTypeConfig": {
        "title": "SubscriptionTypeConfig",
        "anyOf": [
          {
            "$ref": "#/components/schemas/CrossingSubscriptionTypeConfig"
          },
          {
            "$ref": "#/components/schemas/CrossingUpSubscriptionTypeConfig"
          },
          {
            "$ref": "#/components/schemas/CrossingDownSubscriptionTypeConfig"
          },
          {
            "$ref": "#/components/schemas/CrossingStepSubscriptionTypeConfig"
          },
          {
            "$ref": "#/components/schemas/GreaterThanSubscriptionTypeConfig"
          },
          {
            "$ref": "#/components/schemas/LessThanSubscriptionTypeConfig"
          },
          {
            "$ref": "#/components/schemas/EventAndMarketOpenStatusChangesSubscriptionTypeConfig"
          }
        ]
      },
      "CrossingSubscriptionTypeConfig": {
        "title": "CrossingSubscriptionTypeConfig",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SubscriptionType.CROSSING",
            "title": "type"
          },
          "config": {
            "$ref": "#/components/schemas/SubscriptionConfig",
            "title": "config"
          }
        },
        "additionalProperties": false,
        "required": [
          "config",
          "type"
        ]
      },
      "SubscriptionType.CROSSING": {
        "title": "SubscriptionType.CROSSING",
        "type": "string",
        "enum": [
          "Crossing"
        ]
      },
      "SubscriptionConfig": {
        "title": "SubscriptionConfig",
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/components/schemas/SubscriptionConfig.T",
            "title": "params"
          }
        },
        "additionalProperties": false,
        "required": [
          "params"
        ]
      },
      "CrossAnyParams": {
        "title": "CrossAnyParams",
        "type": "object",
        "properties": {
          "threshold_percent": {
            "type": "number",
            "title": "threshold_percent"
          }
        },
        "additionalProperties": false,
        "required": [
          "threshold_percent"
        ]
      },
      "SubscriptionConfig.T": {
        "$ref": "#/components/schemas/CrossAnyParams"
      },
      "CrossingUpSubscriptionTypeConfig": {
        "title": "CrossingUpSubscriptionTypeConfig",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SubscriptionType.CROSSING_UP",
            "title": "type"
          },
          "config": {
            "$ref": "#/components/schemas/SubscriptionConfig_1",
            "title": "config"
          }
        },
        "additionalProperties": false,
        "required": [
          "config",
          "type"
        ]
      },
      "SubscriptionType.CROSSING_UP": {
        "title": "SubscriptionType.CROSSING_UP",
        "type": "string",
        "enum": [
          "Crossing Up"
        ]
      },
      "SubscriptionConfig_1": {
        "title": "SubscriptionConfig_1",
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/components/schemas/SubscriptionConfig.T_1",
            "title": "params"
          }
        },
        "additionalProperties": false,
        "required": [
          "params"
        ]
      },
      "CrossUpParams": {
        "title": "CrossUpParams",
        "type": "object",
        "properties": {
          "threshold_percent": {
            "type": "number",
            "title": "threshold_percent"
          }
        },
        "additionalProperties": false,
        "required": [
          "threshold_percent"
        ]
      },
      "SubscriptionConfig.T_1": {
        "$ref": "#/components/schemas/CrossUpParams"
      },
      "CrossingDownSubscriptionTypeConfig": {
        "title": "CrossingDownSubscriptionTypeConfig",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SubscriptionType.CROSSING_DOWN",
            "title": "type"
          },
          "config": {
            "$ref": "#/components/schemas/SubscriptionConfig_2",
            "title": "config"
          }
        },
        "additionalProperties": false,
        "required": [
          "config",
          "type"
        ]
      },
      "SubscriptionType.CROSSING_DOWN": {
        "title": "SubscriptionType.CROSSING_DOWN",
        "type": "string",
        "enum": [
          "Crossing Down"
        ]
      },
      "SubscriptionConfig_2": {
        "title": "SubscriptionConfig_2",
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/components/schemas/SubscriptionConfig.T_2",
            "title": "params"
          }
        },
        "additionalProperties": false,
        "required": [
          "params"
        ]
      },
      "CrossDownParams": {
        "title": "CrossDownParams",
        "type": "object",
        "properties": {
          "threshold_percent": {
            "type": "number",
            "title": "threshold_percent"
          }
        },
        "additionalProperties": false,
        "required": [
          "threshold_percent"
        ]
      },
      "SubscriptionConfig.T_2": {
        "$ref": "#/components/schemas/CrossDownParams"
      },
      "CrossingStepSubscriptionTypeConfig": {
        "title": "CrossingStepSubscriptionTypeConfig",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SubscriptionType.CROSSING_STEP",
            "title": "type"
          },
          "config": {
            "$ref": "#/components/schemas/SubscriptionConfig_3",
            "title": "config"
          }
        },
        "additionalProperties": false,
        "required": [
          "config",
          "type"
        ]
      },
      "SubscriptionType.CROSSING_STEP": {
        "title": "SubscriptionType.CROSSING_STEP",
        "type": "string",
        "enum": [
          "Crossing Step"
        ]
      },
      "SubscriptionConfig_3": {
        "title": "SubscriptionConfig_3",
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/components/schemas/SubscriptionConfig.T_3",
            "title": "params"
          }
        },
        "additionalProperties": false,
        "required": [
          "params"
        ]
      },
      "CrossStepParams": {
        "title": "CrossStepParams",
        "type": "object",
        "properties": {
          "threshold_percent": {
            "type": "number",
            "title": "threshold_percent"
          }
        },
        "additionalProperties": false,
        "required": [
          "threshold_percent"
        ]
      },
      "SubscriptionConfig.T_3": {
        "$ref": "#/components/schemas/CrossStepParams"
      },
      "GreaterThanSubscriptionTypeConfig": {
        "title": "GreaterThanSubscriptionTypeConfig",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SubscriptionType.GREATER_THAN",
            "title": "type"
          },
          "config": {
            "$ref": "#/components/schemas/SubscriptionConfig_4",
            "title": "config"
          }
        },
        "additionalProperties": false,
        "required": [
          "config",
          "type"
        ]
      },
      "SubscriptionType.GREATER_THAN": {
        "title": "SubscriptionType.GREATER_THAN",
        "type": "string",
        "enum": [
          "Greater Than"
        ]
      },
      "SubscriptionConfig_4": {
        "title": "SubscriptionConfig_4",
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/components/schemas/SubscriptionConfig.T_4",
            "title": "params"
          }
        },
        "additionalProperties": false,
        "required": [
          "params"
        ]
      },
      "GreaterThanParams": {
        "title": "GreaterThanParams",
        "type": "object",
        "properties": {
          "threshold_percent": {
            "type": "number",
            "title": "threshold_percent"
          }
        },
        "additionalProperties": false,
        "required": [
          "threshold_percent"
        ]
      },
      "SubscriptionConfig.T_4": {
        "$ref": "#/components/schemas/GreaterThanParams"
      },
      "LessThanSubscriptionTypeConfig": {
        "title": "LessThanSubscriptionTypeConfig",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SubscriptionType.LESS_THAN",
            "title": "type"
          },
          "config": {
            "$ref": "#/components/schemas/SubscriptionConfig_5",
            "title": "config"
          }
        },
        "additionalProperties": false,
        "required": [
          "config",
          "type"
        ]
      },
      "SubscriptionType.LESS_THAN": {
        "title": "SubscriptionType.LESS_THAN",
        "type": "string",
        "enum": [
          "Less Than"
        ]
      },
      "SubscriptionConfig_5": {
        "title": "SubscriptionConfig_5",
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/components/schemas/SubscriptionConfig.T_5",
            "title": "params"
          }
        },
        "additionalProperties": false,
        "required": [
          "params"
        ]
      },
      "LessThanParams": {
        "title": "LessThanParams",
        "type": "object",
        "properties": {
          "threshold_percent": {
            "type": "number",
            "title": "threshold_percent"
          }
        },
        "additionalProperties": false,
        "required": [
          "threshold_percent"
        ]
      },
      "SubscriptionConfig.T_5": {
        "$ref": "#/components/schemas/LessThanParams"
      },
      "EventAndMarketOpenStatusChangesSubscriptionTypeConfig": {
        "title": "EventAndMarketOpenStatusChangesSubscriptionTypeConfig",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SubscriptionType.EVENT_AND_MARKET_OPEN_STATUS_CHANGES",
            "title": "type"
          },
          "config": {
            "$ref": "#/components/schemas/SubscriptionConfig_6",
            "title": "config"
          }
        },
        "additionalProperties": false,
        "required": [
          "config",
          "type"
        ]
      },
      "SubscriptionType.EVENT_AND_MARKET_OPEN_STATUS_CHANGES": {
        "title": "SubscriptionType.EVENT_AND_MARKET_OPEN_STATUS_CHANGES",
        "type": "string",
        "enum": [
          "New or closed events and markets"
        ]
      },
      "SubscriptionConfig_6": {
        "title": "SubscriptionConfig_6",
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/components/schemas/SubscriptionConfig.T_6",
            "title": "params"
          }
        },
        "additionalProperties": false,
        "required": [
          "params"
        ]
      },
      "EmptyParams": {
        "title": "EmptyParams",
        "type": "object",
        "additionalProperties": false
      },
      "SubscriptionConfig.T_6": {
        "$ref": "#/components/schemas/EmptyParams"
      },
      "WebhookNotificationChannel": {
        "title": "WebhookNotificationChannel",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/NotificationChannelType.WEBHOOK",
            "title": "type"
          },
          "settings": {
            "type": "object",
            "properties": {
              "webhookUrl": {
                "type": "string",
                "title": "webhookUrl"
              }
            },
            "additionalProperties": false,
            "required": [
              "webhookUrl"
            ],
            "title": "settings"
          }
        },
        "additionalProperties": false,
        "required": [
          "settings",
          "type"
        ]
      },
      "NotificationChannelType.WEBHOOK": {
        "title": "NotificationChannelType.WEBHOOK",
        "type": "string",
        "enum": [
          "Webhook"
        ]
      },
      "CreateWatchlistScopeSubscriptionJSONResponse": {
        "title": "GetSubscriptionsJSONResponse",
        "type": "object",
        "properties": {
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionResponse"
            },
            "title": "subscriptions"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptions"
        ]
      },
      "GetSubscriptionsJSONResponse": {
        "title": "GetSubscriptionsJSONResponse",
        "type": "object",
        "properties": {
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionResponse"
            },
            "title": "subscriptions"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptions"
        ]
      },
      "SubscriptionResponse": {
        "title": "SubscriptionResponse",
        "type": "object",
        "properties": {
          "watchlistId": {
            "type": "string",
            "title": "watchlistId"
          },
          "watchlistName": {
            "type": "string",
            "title": "watchlistName"
          },
          "subscriptionId": {
            "type": "string",
            "title": "subscriptionId"
          },
          "eventTitle": {
            "type": "string",
            "title": "eventTitle"
          },
          "eventId": {
            "type": "string",
            "title": "eventId"
          },
          "marketQuestion": {
            "type": "string",
            "title": "marketQuestion"
          },
          "marketId": {
            "type": "string",
            "title": "marketId"
          },
          "subscriptionScope": {
            "$ref": "#/components/schemas/SubscriptionScope",
            "title": "subscriptionScope"
          },
          "subscriptionTypeConfig": {
            "$ref": "#/components/schemas/SubscriptionTypeConfig",
            "title": "subscriptionTypeConfig"
          },
          "createdAt": {
            "type": "string",
            "title": "createdAt"
          },
          "expiresAt": {
            "type": "string",
            "nullable": true,
            "title": "expiresAt"
          },
          "updatedAt": {
            "type": "string",
            "nullable": true,
            "title": "updatedAt"
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionStatus",
            "title": "status"
          },
          "triggerType": {
            "$ref": "#/components/schemas/TriggerType",
            "title": "triggerType"
          },
          "triggerInterval": {
            "$ref": "#/components/schemas/TriggerInterval",
            "title": "triggerInterval"
          },
          "triggerCount": {
            "type": "number",
            "title": "triggerCount"
          },
          "lastTriggeredAt": {
            "type": "string",
            "nullable": true,
            "title": "lastTriggeredAt"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationChannel"
            },
            "title": "channels"
          }
        },
        "additionalProperties": false,
        "required": [
          "channels",
          "createdAt",
          "expiresAt",
          "status",
          "subscriptionId",
          "subscriptionScope",
          "subscriptionTypeConfig",
          "triggerType",
          "watchlistId",
          "watchlistName"
        ]
      },
      "SubscriptionScope": {
        "title": "SubscriptionScope",
        "type": "string",
        "enum": [
          "Watchlist",
          "Event",
          "Market"
        ]
      },
      "SubscriptionStatus": {
        "title": "SubscriptionStatus",
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "enabled"
          },
          "reason": {
            "$ref": "#/components/schemas/SubscriptionStatusReason",
            "title": "reason"
          }
        },
        "additionalProperties": false,
        "required": [
          "enabled",
          "reason"
        ]
      },
      "SubscriptionStatusReason": {
        "title": "SubscriptionStatusReason",
        "type": "string",
        "enum": [
          "Created",
          "Updated",
          "Triggered",
          "Paused by user",
          "Restarted by user",
          "Event closed",
          "Market closed"
        ]
      },
      "TriggerType": {
        "title": "TriggerType",
        "type": "string",
        "enum": [
          "One Time",
          "Recurring"
        ]
      },
      "TriggerInterval": {
        "title": "TriggerInterval",
        "enum": [
          "12h",
          "24h",
          "30m",
          "5m",
          "60m",
          "6h"
        ],
        "type": "string"
      },
      "NotificationChannel": {
        "title": "NotificationChannel",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/NotificationChannelType",
            "title": "type"
          },
          "settings": {
            "type": "object",
            "properties": {
              "telegramChatId": {
                "type": "number",
                "title": "telegramChatId"
              },
              "webhookUrl": {
                "type": "string",
                "title": "webhookUrl"
              },
              "discordWebhookUrl": {
                "type": "string",
                "title": "discordWebhookUrl"
              }
            },
            "additionalProperties": false,
            "title": "settings"
          },
          "status": {
            "enum": [
              "BLOCKED_BY_USER",
              "FAILED",
              "PENDING",
              "READ",
              "SENT"
            ],
            "type": "string",
            "title": "status"
          }
        },
        "additionalProperties": false,
        "required": [
          "type"
        ]
      },
      "NotificationChannelType": {
        "title": "NotificationChannelType",
        "type": "string",
        "enum": [
          "In App",
          "Webhook",
          "Discord",
          "Telegram"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      }
    }
  },
  "security": [],
  "paths": {
    "/v2/search": {
      "post": {
        "operationId": "searchEvents",
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Search API",
        "description": "Search API for events using structured keyphrases\n**Authentication is optional.**\n",
        "tags": [
          "Search API"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchV2JSONRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful search response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJSONResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/create/watchlist": {
      "post": {
        "operationId": "createWatchlistSubscription",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a watchlist-scoped subscription",
        "description": "Creates a subscription that monitors all markets in a watchlist for the specified trigger conditions. \nThis is a simplified endpoint specifically for watchlist-scoped subscriptions that only accepts webhook notification channels.\n",
        "tags": [
          "Subscriptions"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWatchlistScopeSubscriptionJSONRequest"
              },
              "examples": {
                "event_status_changes": {
                  "summary": "New or closed events and markets",
                  "value": {
                    "watchlistId": "507f1f77bcf86cd799439011",
                    "subscriptionTypeConfig": {
                      "type": "New or closed events and markets",
                      "config": {
                        "params": {}
                      }
                    },
                    "channels": [
                      {
                        "type": "Webhook",
                        "settings": {
                          "webhookUrl": "https://your-webhook-endpoint.com/status-changes"
                        }
                      }
                    ]
                  }
                },
                "crossing_alert": {
                  "summary": "Crossing threshold alert",
                  "value": {
                    "watchlistId": "507f1f77bcf86cd799439011",
                    "subscriptionTypeConfig": {
                      "type": "Crossing",
                      "config": {
                        "params": {
                          "threshold_percent": 50
                        }
                      }
                    },
                    "channels": [
                      {
                        "type": "Webhook",
                        "settings": {
                          "webhookUrl": "https://your-webhook-endpoint.com/alerts"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subscription created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWatchlistScopeSubscriptionJSONResponse"
                },
                "examples": {
                  "success": {
                    "summary": "Successful subscription creation",
                    "value": {
                      "subscriptions": [
                        {
                          "watchlistId": "507f1f77bcf86cd799439011",
                          "watchlistName": "Election Markets",
                          "subscriptionId": "507f191e810c19729de860ea",
                          "subscriptionScope": "Watchlist",
                          "subscriptionTypeConfig": {
                            "type": "New or closed events and markets",
                            "config": {
                              "params": {}
                            }
                          },
                          "createdAt": "2024-09-26T10:30:00.000Z",
                          "expiresAt": null,
                          "updatedAt": null,
                          "status": {
                            "enabled": true,
                            "reason": "Created"
                          },
                          "triggerType": "Recurring",
                          "triggerInterval": "30m",
                          "triggerCount": 0,
                          "lastTriggeredAt": null,
                          "channels": [
                            {
                              "type": "Webhook",
                              "settings": {
                                "webhookUrl": "https://your-webhook-endpoint.com/status-changes"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "no_channels": {
                    "summary": "No notification channels provided",
                    "value": {
                      "error": "No channels found for subscription"
                    }
                  },
                  "watchlist_not_found": {
                    "summary": "Watchlist not found or doesn't belong to user",
                    "value": {
                      "error": "Watchlist not found"
                    }
                  },
                  "duplicate_event_status_subscription": {
                    "summary": "Duplicate event status subscription",
                    "value": {
                      "error": "Only one EVENT_AND_MARKET_OPEN_STATUS_CHANGES subscription is allowed per watchlist"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "user_not_found": {
                    "summary": "User not found",
                    "value": {
                      "error": "User not found"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "creation_failed": {
                    "summary": "Failed to create subscription",
                    "value": {
                      "error": "Failed to create subscription"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}